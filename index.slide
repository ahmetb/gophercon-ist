Using Go to be a better engineer
GopherCon Turkey, 18 December 2021

Ahmet Alp Balkan
twitter.com/ahmetb

*  Hakkimda

10 yildir acik kaynakli cloud compute infrastructure (Docker,
Kubernetes, serverless) ve developer tools uzerine calisiyorum.

Bu surenin cogunda programlama dili olarak sadece Go kullandim.

* Bu sunum

- Kariyer tavsiyesi degil.
- "Go oteki dillerden iyidir" tartismasi degil.
- Go reklami degil.
- "Go beni nasil daha iyi bir muhendis yapti" uzerine bir analiz.

* Go neden gelistirildi?

* Google


- O(10,000) muhendis
- O(1,000) servis
- <10 izin verilen programlama dili
-  Codebase'in cogunlugu Java, C++, Python

Problemler:

1. Dilin Google icindeki ve disindaki kullanimi cok farkli
2. Yeni mezun muhendisler bu dillerde uzmanlasmakta zorluk cekiyor.

* Cozum: Go?

Dilin icerideki & disaridaki versiyonu ayni (ayni stdlib, ayni style guide).

Ogrenmesi kolay.

Kullandiginiz oteki dillere benziyor.

Kodu okumak ve anlamak birkac kat daha kolay.

* Iyi bir muhendisten beklentiler

- Yeni bir projeye/ortama hizli ayak uydurabilmesi.
- Aklindaki plani makul bir zamanda production-ready koda dokebilmesi.
- Karsilastigi problemleri kendi basina (ya da az bir yardimla) cozebilmesi.

Bugune kadar kullandiginiz diller bunlari ne kadar kolay sagliyor?
